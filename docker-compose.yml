version: "3.3"
services:
  backend:
    container_name: backend
    build:
      context: ./backend
    command: sh -c "gunicorn teloprogramo.wsgi:application --bind 0.0.0.0:8001 --reload"
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app/backend
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - database

    env_file:
      - backend.env
  frontend:
    image: node:14
    working_dir: /app
    volumes:
      - ./frontend/web:/app
    command: sh -c "npm install && npm run build"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./frontend/web/build:/usr/share/nginx/html 
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/nginx.conf 

    depends_on:
      - backend
      - frontend

  database:
    image: postgres:15
    restart: always
    volumes:
      - ./BD:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
    ports:
      - "5432:5432"
  run_code:
    image: run_code
    build: ./backend/run_code
    container_name: run_code
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
volumes:
  react_build: